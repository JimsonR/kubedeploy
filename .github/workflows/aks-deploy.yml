name: Deploy to AKS

on:
  push:
    branches:
      - main

env:
  TAG: latest
  AZMCPSERVER_IMAGE: eswarchivatam/azmcpserver:latest
  MCPCLIENT_IMAGE: eswarchivatam/mcpclient:latest
  MCPFRONTEND_IMAGE: eswarchivatam/mcpfrontend:latest
  K8S_NAMESPACE: mcp-app

jobs:
  build-and-publish-manifests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload Kubernetes manifests as artifact
        uses: actions/upload-artifact@v4
        with:
          name: manifests
          path: '**/*.yaml'

  deploy:
    needs: build-and-publish-manifests
    runs-on: ubuntu-latest
    # environment: # Uncomment and set to a valid environment if you have one defined in your repository
    #   name: production
    steps:
      - name: Download manifests artifact
        uses: actions/download-artifact@v4
        with:
          name: manifests
          path: manifests

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: MultiAgentDataVisual  # <-- update as needed
          cluster-name: Multiagent_AKS          # <-- update as needed

      - name: Create/Update Namespace
        run: |
          kubectl create namespace $K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update azure-sql-secret
        run: |
          kubectl create secret generic azure-sql-secret -n $K8S_NAMESPACE --from-literal=password=${{ secrets.AZURE_SQL_PASSWORD }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update azure-openai-secret
        run: |
          kubectl create secret generic azure-openai-secret -n $K8S_NAMESPACE --from-literal=api-key=${{ secrets.AZURE_OPENAI_API_KEY }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy azmcpserver
        run: |
          kubectl apply -f manifests/azmcpserver-deployment.yaml
          kubectl apply -f manifests/azmcpserver-service.yaml

      - name: Deploy mcp-client
        run: |
          kubectl apply -f manifests/mcp-client-deployment.yaml
          kubectl apply -f manifests/mcp-client-service.yaml

      - name: Deploy mcp-frontend
        run: |
          kubectl apply -f manifests/mcp-frontend-deployment.yaml
          kubectl apply -f manifests/mcp-frontend-service.yaml
